{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Activate python environment.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## conda activate \n",
    "***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Use python3.5\n",
    "\n",
    "1. Open the \"Anaconda Prompt\"\n",
    "2. Write \"conda activate vjem35\" on the command line. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Use python3.7\n",
    "\n",
    "1. Open the \"Anaconda Prompt\"\n",
    "2. Write \"conda activate vjem37\" on the command line. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Use python3.8\n",
    "\n",
    "1. Open the \"Anaconda Prompt\"\n",
    "2. Write \"conda activate vjem38\" on the command line. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Example\n",
    "\n",
    "Activate python3.5 environment.\n",
    "\n",
    "```python\n",
    "(base) C:\\Users\\JEOL\\Desktop>conda activate vjem35\n",
    "(vjem35) C:\\Users\\JEOL\\Desktop>python\n",
    "Python 3.5.3 | packaged by conda-forge | (default, May 12 2017, 16:16:49) [MSC v.1900 64 bit (AMD64)] on win32\n",
    "Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n",
    ">>>\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Online\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TEM3 package\n",
    "***\n",
    "Load the TEM3 package to control TEM.  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. import \n",
    "The below code will load the TEM3 package. \n",
    "\n",
    "```python\n",
    ">>> from PyJEM import TEM3\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. connect to TEM\n",
    "Execute the following code to connect to TEM.  \n",
    "There are 2 ways to connect to the TEM.\n",
    "\n",
    "**Execute the connect function**\n",
    "\n",
    "```python\n",
    ">>> TEM3.connect()\n",
    "True\n",
    "Ready Communication\n",
    "```\n",
    "\n",
    "**Create class instance**  \n",
    "ex) create Apt3 instance\n",
    "\n",
    "```python\n",
    ">>> TEM3.Apt3()\n",
    "True\n",
    "Ready Communication\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Check communication status \n",
    "You can check the communication status with TEM with the following code.  \n",
    "The return value is Boolean. True is output if communication is successful. \n",
    "\n",
    "```python\n",
    ">>> TEM3.isconnect()\n",
    "True\n",
    "```\n",
    "\n",
    "If communication is possible, the function can be executed from the interface documents. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## detector package\n",
    "***\n",
    "Load the detector package to control camera/detector.  \n",
    "With this package, you can use JEOL's camera, stem detector, and its associated features. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. import \n",
    "The below code will load the detector package. \n",
    "\n",
    "```python\n",
    ">>> from PyJEM import detector\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Check communication status \n",
    "You can check the communication status with TEM with the following code.  \n",
    "\n",
    "```python\n",
    ">>> detector.get_connect_info()\n",
    "(\"detector\", \"online\", \"127.0.0.1\")\n",
    "```\n",
    "\n",
    "From the above execution result, \"127.0.0.1\" displays IP address of the connection destination PC.  \n",
    "\n",
    "* If \"offline\" is displayed, change it to \"online\" from the code below. \n",
    "\n",
    "```python\n",
    ">>> detector.online()\n",
    "(\"detector\", \"online\", \"127.0.0.1\")\n",
    "```\n",
    "\n",
    "* If IP address is different, please change it from the code below. \n",
    "\n",
    "```python\n",
    ">>> detector.change_ip(...)\n",
    "(\"detector\", \"online\", \"...\")\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Offline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TEM3 package\n",
    "***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Switch to offine\n",
    "Execute the following code to dummy data.  \n",
    "\n",
    "```python\n",
    ">>> from PyJEM.offline import TEM3\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## detector package\n",
    "***"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Switch to offline\n",
    "Execute the following code to dummy data.  \n",
    "\n",
    "```python\n",
    ">>> from PyJEM import detector\n",
    ">>> detector.offline()\n",
    ">>> detector.isonline()\n",
    "False\n",
    "```"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
